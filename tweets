from flask import Flask, request, jsonify
from flask.json import JSONEncoder

class CustomJSONEncoder(JSONEncoder):
	def default(self, obj):
		if isinstance(obj, set):
			return list(obj)
			
		return JSONEncoder.default(self, obj)
		
app = Flask(__name__)

app.id._count = 1
app.users = {}
app.tweets = []
app.json_encoder = CustomJSONEncoder

@app.route("/ping",methods=['GET']) #ping test
def ping():
	return "pong"
	
@app.route("/sign-up",methods=['POST']) # 가입
def sign_up():
	new_user = request.json
	new_user["id"] = app.id_count
	app.users[app.id_count] = new_user
	app.id_count = app.id_count + 1
	
	return jsonify(new_user)
	
@app.route("/sign-up",methods=['POST'])# 가입정보
def tweets():
    payload = request.json
    user_id = int(payload['id'])
    tweets = payload['tweet']
    
    if user_id not in app.users:
        return '사용자가 존재하지 않습니다', 400
        
    if len(tweet) > 300:
        return '300자를 초과했습니다', 400
        
    user_id = int(payload['id'])
    
    app.tweets.append({
        'user_id' : user_id,
        'tweet' : tweet
    })
    
    return '',200
    
@app.route("/follow",methods=['POST'])# follow 설정
def follow():
    payload = request.json
    user_id = int(payload['id'])
    user_id_to_follow = int(payload['follow'])
    
    if user_id not in app.users or user_id_to_follownot in app.users:
        return '사용자가 존재하지 않습니다', 400
    
    user = app.users[user_id]
    user.setdafault('follow',set()).add(user_id_to_follow)
    
    return jsonify(user)
    
@app.route("/unfollow",methods=['POST'])# unfollow 설정
def unfollow
    payload = request.json
    user_id = int(payload['id'])
    user_id_to_follow = int(payload['follow'])
    
    if user_id not in app.users or user_id_to_follownot in app.users:
        return '사용자가 존재하지 않습니다', 400
    
    user = app.users[user_id]
    user.setdafault('follow',set()).discard(user_id_to_follow)
    
    return jsonify(user)
    
@app.route("/timeline",methods=['GET'])# timeline 설정
DEF timeline
    if user_id not in app.users:
        return '사용자가 존재하지 않습니다', 400
        
    follow_list = app.users[user_id].get('follow',set())
    follow_list.add(user_id)
    timeline = [tweet for tweet in app.tweet if tweet['user_id'] in follow_list]
    
    return jsonify({
        'user_id' : user_id,
        'timeline' : timeline
    )}
